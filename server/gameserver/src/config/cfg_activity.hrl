%%: 声明
-ifndef(cfg_activity).
-define(cfg_activity, 1).

-record(activityCfg, {
        %%: 作者:
        %%: 活动id
        id,

        %%: 作者:
        %%: 活动名字
        name,

        %%: 作者:
        %%: 0=本服活动
        %%: 1=跨服活动
        type,

        %%: 作者:
        %%: 活动周期类型
        %%: 0、表示本活动已经关闭
        %%: 1、每小时活动
        %%: 2、每天活动
        %%: 3、每周活动
        %%: 4、每月活动
        %%: 5、按指定时间段，cycletime有效
        %%: 6、永久活动，不初始化，也不进入活动阶段
        cycletype,

        %%: 作者:
        %%: cycletype=5时，该项有效，配置活动周期秒，
        %%: 其余配置0
        cycletime,

        %%: 作者:
        %%: 活动开启时间，配0表示按周期循环的活动
        %%: 如果周期是天，则｛0占位，10表示10点开启活动｝
        %%: 如果周期是周，则｛1表示周几，9表示9点开启活动｝
        %%: 1表示星期一，7表示星期天
        %%: 如果周期是月，则｛1表示几号，9表示9点开启活动｝
        starttime,

        %%: 作者:
        %%: 每次活动持续时间(秒)
        lenghtime,

        %%: 作者:
        %%: 活动阶段，活动开始后，多少秒进入第一个阶段，第一阶段后，多少秒，进入第二阶段，依次类推
        stage,

        %%: 作者:
        %%: 活动所在地图列表,0表示全地图（只是普通地图）
        mapidlist,

        %%: 作者:
        %%: 参加活动条件索引id
        condition,

        %%: 作者:
        %%: 活动奖励
        awardlist,

        %%: 该活动最大报名数量
        limitApply,

        %%: 【X，Y，Z，L】——【单场景最小限制组数，单场景最大限制组数，是否允许加塞，是否允许开展活动】 Y>=X>=2
        %%: 说明：匹配类型的活动单个场景人数为Y，但会有部分多余的人出来，Z和L是为了解决这部分多余的人而设立的。
        %%: 若总人数<X，L为1时，也可以开展活动，L为0时，则不会开展
        %%: Z为1时，将多余的报名组插入已经匹配好的活动地图
        %%: Z为0时，L为1时，为多余的报名组单独创建地图
        %%: Z为0时，L为0时，多余的报名组需要特殊处理
        limitGroup

 }).

-endif.